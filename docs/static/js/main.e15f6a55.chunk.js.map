{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","pages/index.js","api/getip.js","api/getcity.js","api/getwoeid.js","api/getweather.js","components/weatherdata.js","pages/weather.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","Logo","a","Git","NavLink","Link","NavMenu","FaBars","div","Navbar","href","className","to","activeStyle","Home","style","display","justifyContent","alignItems","height","textAlign","loop","Infinity","wrapper","steps","Getip","axios","response","data","ip","Getcity","res","city","Getwoeid","woeid","Getweather","Weatherdata","state","loading","weather","weather_abbr","image","humidity","predictability","min_temp","max_temp","loadinganim","b","c","d","this","setState","title","consolidated_weather","weather_state_name","weather_state_abbr","src","alt","width","Component","Weather","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e15f6a55.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { NavLink as Link } from 'react-router-dom';\nimport { FaBars } from 'react-icons/fa';\n\nexport const Nav = styled.nav`\n  background: #000;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem calc((100vw - 1000px) / 2);\n  z-index: 10;\n\n  /* Third Nav */\n  // justify-content: flex-start;\n`;\n\nexport const Logo = styled.a`\n  background-color: #000;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  border-radius: 50%;\n\n  &:hover {\n    background-color: #ff0088;\n    color: #441111;\n  }\n`;\n\nexport const Git = styled.a`\n  background-color: #000;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n\n  &:hover {\n    color: #15cdfc;\n  }\n`;\n\nexport const NavLink = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  white-space: nowrap;\n\n  &.active {\n    color: #15cdfc;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #fff;\n  @media screen and (max-width: 720px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  // margin-right: -24px;\n\n  /* Second Nav */\n  // margin-right: 24px;\n\n  /* Third Nav */\n  width: 100vw;\n  white-space: nowrap;\n\n  @media screen and (max-width: 720px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  /* Third Nav */\n  justify-content: flex-end;\n  width: 100vw;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #256ce1;\n  padding: 10px 22px;\n  color: #fff;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  /* Second Nav */\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #010606;\n  }\n`;","import React from 'react'\nimport {Nav, NavLink, NavMenu, NavBtn, NavBtnLink, Logo, Git} from './NavbarElements'\n\nconst Navbar = () => {\n    return (\n        <Nav>\n            <Logo href=\"https://github.com/legendof17\" className=\"Logo\">\n                <h1>LO17</h1>    \n            </Logo> \n            <NavLink to=\"/\" activeStyle>\n                <h3>MY CITY WEATHER</h3> \n            </NavLink>\n            {/* <Bars /> */}\n            <NavMenu>\n                <NavLink to=\"/weather\" activeStyle>\n                    Weather?\n                </NavLink>\n            </NavMenu>\n            {/* <NavBtn>\n                <NavBtnLink to='/signin'>Sign In</NavBtnLink>\n             </NavBtn> */}\n            <Git href=\"https://github.com/legendof17/my-city-weather\">\n                <h3>GitHub</h3>    \n            </Git>\n        </Nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react';\nimport Typical from 'react-typical';\n// import Getweather from '../api/getweather';\n// import Getip from '../api/getip';\n\n// Getip();\n// Getweather();\nexport const Home = () => {\n    return (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '90vh'\n          }}\n          >\n          {/* <h1>Home World<br /></h1> */}\n          <h1 style={{textAlign: 'center'}}><Typical \n            loop={Infinity} \n            wrapper=\"b\" \n            steps={[\n              'Hello World.', 100,\n              'Hello World..', 100, \n              'Hello World..!', 100, \n              'Hello World..! 🎃', 250, \n              'Rotate your phone 🔄', 300, \n              'To see \"magic Weather? button\" 🕷️', 600\n            ]} /></h1>\n          {/* <Getcity /> */}\n        </div>\n    )\n}\n\nexport default Home;\n","import axios from 'axios';\n// import Getcity from './getcity';\n\n// const Getip = () => {\n//     let [data, setdata] = React.useState('')\n//     axios.get('https://api.ipify.org/?format=json')\n//         .then(response => { setdata(response.data)});\n//     // let data = res.data.ip;\n//     console.log(data);\n//     return true;\n// }\n\nexport default async function Getip() {\n    const response = await axios('https://api.ipify.org/?format=json');\n    return response.data.ip;\n    // Getcity(response.data.ip);\n    // console.log(response.data.ip);\n}\n","import axios from 'axios';\nimport Getip from './getip';\n// import { Getwoeid } from './getwoeid';\n\nexport default async function Getcity() {\n    const ip = await Getip();\n    const res = await axios('https://freegeoip.app/json/' + ip );\n    return res.data.city;\n    // Getwoeid(res.data.city);\n    // console.log(res.data.city);\n}\n","import axios from 'axios';\nimport Getcity from './getcity';\n// import { Getweather } from './getweather'\n\nexport default async function Getwoeid() {\n    const city = await Getcity();\n    const res = await axios('https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=' + city);\n    // const res = await axios('https://www.metaweather.com/api/location/search/?query=' + city);\n    // console.log(res);\n    return res.data[0].woeid;\n    // Getweather(res.data[0].woeid);\n    // console.log(res.data[0].woeid);\n}\n","import axios from 'axios';\nimport Getwoeid from './getwoeid';\n\nexport default async function Getweather() {\n    const woeid = await Getwoeid();\n    const response = await axios('https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/' + woeid + '/');\n    return response;\n    // console.log(response.data.consolidated_weather[0].weather_state_name);\n    // console.log(response.data.consolidated_weather[0].weather_state_abbr);\n    // console.log(response.data.consolidated_weather[0].humidity);\n    // console.log(response.data.consolidated_weather[0].predictability);\n    // console.log(response.data.consolidated_weather[0].min_temp);\n    // console.log(response.data.consolidated_weather[0].max_temp);\n}","import React, { Component } from 'react'\nimport Getweather from '../api/getweather';\nimport Typical from 'react-typical';\nimport styled from 'styled-components';\n\nexport default class Weatherdata extends Component {\n    state = {\n        loading: true,\n        city: null,\n        weather: null,\n        weather_abbr: null,\n        image: null,\n        humidity: null,\n        predictability: null,\n        min_temp: null,\n        max_temp: null,\n    }\nasync componentDidMount() {\n    const response = await Getweather();\n    // console.log(response);\n    this.setState({\n        city : response.data.title,\n        weather : response.data.consolidated_weather[0].weather_state_name,\n        weather_abbr : response.data.consolidated_weather[0].weather_state_abbr,\n        image : 'https://www.metaweather.com/static/img/weather/' + response.data.consolidated_weather[0].weather_state_abbr + '.svg',\n        humidity : response.data.consolidated_weather[0].humidity,\n        predictability : response.data.consolidated_weather[0].predictability,\n        min_temp : response.data.consolidated_weather[0].min_temp,\n        max_temp : response.data.consolidated_weather[0].max_temp,\n        loading : false,\n    })\n}\n\nloadinganim = {\n    a : 'loading.\\\\', \n    b : 'loading.|',\n    c : 'loading./',\n    d : 'loading.-'};\n    render() {\n        // var divstyle = {\n        //     backgroundImage: 'url(' + this.state.image + ')',\n        //     'background-repeat': 'no-repeat',\n        //     'background-size': 'auto'\n        // };\n        return (\n            // <div style={divstyle} >\n            <div>\n                {this.state.loading || !this.state.weather ? (\n                    // <div><h1>loading...</h1></div>\n                    \n                    <div><h1><Typical \n                        loop={Infinity}\n                        wrapper=\"b\"\n                        steps={[this.loadinganim.a, 50, this.loadinganim.b, 50, this.loadinganim.c, 50, this.loadinganim.d, 50]} /></h1>\n                    </div>\n                ) : (\n                    <div>\n                        <div style={{'margin-top': '10px', 'margin-bottom': '10px'}}>\n                            <img src={this.state.image} alt='Weather Image' width='320' /><br />\n                        </div>\n                        <div>\n                            <div>\n                                <hr />\n                                <div><b>City</b> : {this.state.city}</div>\n                                <div><b>Weather</b> : {this.state.weather}</div>\n                                <div><b>Humidity</b> : {this.state.humidity}💧</div>\n                                <div><b>Prediction</b> : {this.state.predictability}%</div>\n                                <hr />\n                                <b>Temperature:</b>\n                                <div><b>Min</b> : {this.state.min_temp}°C  |  <b>Max</b> : {this.state.max_temp}°C</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Weatherdata from '../components/weatherdata'\n\nexport const Weather = () => {\n    return (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '90vh',\n            textAlign: 'center',\n            width: '100%',\n          }}\n          >\n            <Weatherdata />\n        </div>\n    )\n}\n\nexport default Weather;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './pages';\nimport Weather from './pages/weather';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/weather' exact component={Weather} />\n        <Redirect path='*' to='/' />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}